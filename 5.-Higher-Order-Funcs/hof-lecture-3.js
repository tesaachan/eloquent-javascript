// –°—Ç—Ä–æ–∫–∏ –∏ –∫–æ–¥—ã —Å–∏–º–≤–æ–ª–æ–≤

// –û–ø—Ä–µ–¥–µ–ª–∏–º, –∫–∞–∫–∏–º —à—Ä–∏—Ñ—Ç–æ–º –Ω–∞–±—Ä–∞–Ω —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç–∞,
// –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞:

function characterScript(code) {
	for (let script of SCRIPTS) {
		if (script.ranges.some(([from, to]) => {
			return code >= from && code < to;
		})) {
			return script;
		}
	}
	return null;
}

console.log(characterScript(121)); // {name: "Latin", ...}

// –ú–µ—Ç–æ–¥ some - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ —Å–æ–æ–±—â–∞–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–∏ –æ–Ω–∞
// true –¥–ª—è –ª—é–±–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞.


// —Ç–∞–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–∞–∫ length –∏–º–µ—é—Ç –¥–µ–ª–æ –Ω–µ —Å —Å–∏–º–≤–æ–ª–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é, –∞ —Å –∫–æ–¥–æ–≤—ã–º–∏ –µ–¥–∏–Ω–∏—Ü–∞–º–∏
// –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∑–∞–Ω–∏–º–∞—é—Ç –æ–¥–Ω—É 16-–±–∏—Ç–Ω—É—é –∫–æ–¥. –µ–¥. (65–∫ —Å–∏–º–≤–æ–ª–æ–≤),
// –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–Ω–∏–º–∞—é—Ç 2 –∫–æ–¥–æ–≤—ã–µ –µ–¥–∏–Ω–∏—Ü—ã:

let horseShoe = "üêéüëû";
horseShoe.length; // 4
horseShoe[0] // (Invalid half-character)

// –ú–µ—Ç–æ–¥ charCodeAt() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞,
// –∞ –º–µ—Ç–æ–¥ codePointAt() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–∏–º–≤–æ–ª Unicode:

horseShoe.charCodeAt(0); // 55357 (code of half-character)
horseShoe.codePointAt(0); // 128052 (actual code for horse emoji)

// –¶–∏–∫–ª for/of –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –ø–µ—Ä–µ–±–æ—Ä–∞ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ,
// –ø—Ä–∏ —ç—Ç–æ–º –æ–Ω –¥–∞—ë—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –∞ –Ω–µ –∫–æ–¥–æ–≤—ã–µ –µ–¥–∏–Ω–∏—Ü—ã:

let roseDragon = "ü•Äüêâ";
for (let char of roseDragon) {
	console.log(char);
}
// ü•Ä
// üêâ


// –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞

// –ü–æ–¥—Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏—Ö –∫–∞–∂–¥–æ–º—É —à—Ä–∏—Ñ—Ç—É:

function countBy(items, groupName) {
	let counts = [];
	for (let item of items) {
		let name = groupName(item);
		let known = count.findIndex(c => c.name == name);
		if (known == -1) {
			count.push({name, count: 1});
		} else {
			count[known].count++;
		}
	}
	return counts;
}

counyBy([1, 2, 3, 4, 5], n => n > 2);
// [{name: false, count: 2}, {name: true, count: 3}]

// –ú–µ—Ç–æ–¥ findIndex –Ω–∞—Ö–æ–¥–∏—Ç –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–∞–¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true.
// –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç–æ, –∫–∞–∫ –∏ indexOf, –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1.


// –§—É–Ω–∫—Ü–∏—è, —Å–æ–æ–±—â–∞—é—â–∞—è, –∫–∞–∫–∏–µ —à—Ä–∏—Ñ—Ç—ã –±—ã–ª–∏ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ:

function textScripts(text) {
	let scripts = countBy(text, char => {
		let script = characterScript(char.codePointAt(0));
		return script ? script.name : "none";
	}).filter(({name}) => name != "none");

	let total = scripts.reduce((n, {count}) => n + count, 0);
	if (total == 0) return "No scripts found";

	return scripts.map(({name, count}) => {
		return `${Math.round(count * 100 / total)}% ${name}`;
	}).join(", ");
}

textScripts('woof —Å—É–∫–∞');
// 50% Latin, 50% Cyrillic
